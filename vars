#----------------------------------------#
#                  PATH                  #
#----------------------------------------#

[ -f ~/.path ] && source ~/.path
[ -f ~/.vars.local ] && source ~/.vars.local

#----------------------------------------#
#                VARIABLES               #
#----------------------------------------#

export ip=34.220.92.164
export user=nickmahdavi
export instance=$user@$ip

export HOMEBREW_AUTO_UPDATE_SECS=604800

export ZSHRC=~/.zshrc
export VIMRC=~/.vim/vimrc
export DOT=~/.DOTFILES
export VAR=~/.vars

export EDITOR=vim

export gversion=9

[ -d "/mnt/c" ] && export C=/mnt/c
[ -d "/mnt/d" ] && export D=/mnt/d

#----------------------------------------#
#            ALIASES/FUNCTIONS           #
#----------------------------------------#

alias l="ls -1Frt"
alias lss="/bin/ls"
alias pip="pip3"
alias python="python3"
alias locate="locate -i" # case insensitive
alias g="git"
alias grep="grep --color=always"
alias sudo="sudo "
alias ip="ipconfig getifaddr en0"
alias eip="curl ifconfig.me; echo"
alias notebook="nohup jupyter notebook > /dev/null 2>&1 & disown"

if [[ "$OSTYPE" == "darwin"* ]]; then
    alias ll="ls -AFGhlOprt"
    alias ls="ls -G"
    alias tr="gtr"
    alias switch="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
    alias gcc="gcc-$gversion"
    alias g++="g++-$gversion"
    alias c++="c++-$gversion"
    alias sort="gsort"
else
    alias ll="ls -AFGhlprt"
    alias ls="ls --color=always"
fi

f () { find . -name "*$@*" -print; } # Find all files under the current directory
fs () { find . -name "$@"'*' -print | grep -v node_ | grep -v .git; } # Find file whose name starts with a given string
fe () { find . -name '*'"$@" -print | grep -v node_ | grep -v .git; } # Find file whose name ends with a given string
pf () { local home=$(ps aux | grep "$@" | grep -v grep); [[ -z $(echo $home) ]] && echo "No local results found" || echo "$home"; }
jkill () { pkill -f jupyter || echo "No running notebooks"; }
sshc () { ssh $instance; } # -i ~/.ssh/$key
unactivate () { [ ! -z $(command -v deactivate) ] && deactivate; }

tunnel ()
{
    kill $(pf "ssh.*$1" | awk '{print $2}') > /dev/null 2>&1
    ssh -fgNL $1:127.0.0.1:$1 $instance -i ~/.ssh/id_rsa
}

cd ()
{
    local dir=$PWD
    builtin cd "$@"

    [[ $(pwd) == $(dirname "$VIRTUAL_ENV")/* ]] && return 0

    [[ -d ./env ]] && unactivate || activate

    return 0
}

open ()
{
    if [[ "$@" ]]; then
        command open "$@" 2> /dev/null || explorer.exe "$@" 2> /dev/null
    else
        command open . 2> /dev/null || explorer.exe . 2> /dev/null
    fi
    return 0
}

activate ()
{
    declare -a paths=("bin" "env/bin" "venv/bin" "")
    for p in $paths; do
        [ -f ./"$p"/activate ] && { source ./"$p"/activate; return 0; }
    done
}

duck () { du -ckhd ${2:-1} ${1:-.} | [ -z "$3" ] && sort -n }

vim-pkg () {
    local wdir=$(pwd)
    if [ -z "$1" ]; then
        echo "Must pass a package url"
    elif [ "$1" = "update" ]; then
        git submodule update --recursive --remote
    elif [ "$1" = "list" ]; then
        cd ~/.vim/bundle
        /bin/ls -1
        cd $wdir
    else
        cd ~/.vim/ && git submodule add -b master "$1" bundle/
        cd "$wdir"
    fi
}

open-repo () { REPO_URL=$(git config remote.origin.url); open "${${REPO_URL/git@github.com:/https://github.com/}%%.git}"; }
