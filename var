#----------------------------------------#
#                  PATH                  #
#----------------------------------------#

[ -f ~/.path ] && source ~/.path
[ -f ~/.var.local ] && source ~/.var.local

#----------------------------------------#
#                VARIABLES               #
#----------------------------------------#

export ip=34.220.92.164
export user=nickmahdavi
export instance=$user@$ip

export HOMEBREW_AUTO_UPDATE_SECS=604800

export VIMRC=~/.vim/vimrc

export EDITOR=vim

export gversion=9

#----------------------------------------#
#            ALIASES/FUNCTIONS           #
#----------------------------------------#

alias l="ls -1Frt"
alias pip="pip3"
alias python="python3"
alias locate="locate -i" # case insensitive
alias grep="grep --color=always"
alias sudo="sudo "
alias g="git"
alias k="kill"
alias ip="ipconfig getifaddr en0"
alias eip="curl ifconfig.me; echo"
alias notebook="nohup jupyter notebook > /dev/null 2>&1 & disown"
alias taill="tail -f"

if [[ "$OSTYPE" == "darwin"* ]]; then
    alias ll="ls -AFGhlOprt"
    alias ls="ls -G"
    alias tr="gtr"
    alias switch="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
    alias gcc="gcc-$gversion"
    alias g++="g++-$gversion"
    alias c++="c++-$gversion"
    alias sort="gsort"
else
    alias ll="ls -AFGhlprt"
    alias ls="ls --color=always"
fi

f () { find . -name "*$@*" -print; } # Find all files under the current directory
ff () { find . -type f -print | grep -v node_ | grep -v .git ; }
ffpy () { find . -type f -name "*.py" -print | grep -v node_ | grep -v .git; }
fs () { find . -name "$@"'*' -print | grep -v node_ | grep -v .git; } # Find file whose name starts with a given string
fe () { find . -name '*'"$@" -print | grep -v node_ | grep -v .git; } # Find file whose name ends with a given string
fpy () { echo "find . -name '*.py' | grep -v node_ | grep -v .git | xargs grep $@ 2>/dev/null"; find . -name '*.js' | grep -v node_ | grep -v .git | xargs grep $@ 2>/dev/null; }
fall () { echo "find . | grep -v node_ | grep -v .git | grep -v TAG | xargs grep $@ 2>/dev/null"; find . | grep -v node_ | grep -v .git | grep -v TAG | xargs grep $@ 2>/dev/null; }
pf () { local home=$(ps aux | grep "$@" | grep -v grep); [[ -z $(echo $home) ]] && echo "No local results found" || echo "$home" }
jkill () { pkill -f jupyter || echo "No running notebooks" }
sshc () { ssh $instance; } # -i ~/.ssh/$key
password () { < /dev/urandom | gtr -dc 'A-Za-z0-9"#$%&'\''()*+,-./:;<=>?@[\]^_`{|}~' | head -c $1; echo }
gpassword () { < /dev/urandom | gtr -dc A-Za-z0-9 | head -c $1; echo }
unactivate () { [ ! -z $(command -v deactivate) ] && deactivate }

tunnel ()
{
    kill $(pf "ssh.*$1" | awk '{print $2}') > /dev/null 2>&1
    ssh -fgNL $1:127.0.0.1:$1 $instance -i ~/.ssh/id_rsa
}

cd ()
{
    local dir=$PWD
    builtin cd "$@"

    [[ $(pwd) == $(dirname "$VIRTUAL_ENV")/* ]] && return 0

    [[ -d ./env ]] && unactivate || activate

    clear
    return 0
}

man () { if [[ "$@" == "gcc" ]]; then command man gcc-$gversion; elif
            [[ "$@" == "g++" ]]; then command man g++-$gversion; elif
            [[ "$@" == "c++" ]]; then command man c++-$gversion; else command man "$@"; fi
}

open () { if [[ "$@" ]]; then command open "$@"; else command open .; fi }

activate ()
{
    declare -a paths=("bin" "env/bin" "venv/bin" "")
    for p in $paths; do
        [ -f ./"$p"/activate ] && { source ./"$p"/activate; return 0; }
    done
}

duck () { du -ckhd ${2:-1} {$1:-.} | [ -z "$3" ] && sort -h }

vim-pkg () {
    wdir=$(pwd)
    local wdir
    if [ -z "$1" ]; then
        echo "Must pass a package url"
    elif [ "$1" = "update" ]; then
        cd ~/.vim/bundle
        for i in *; do
            cd "$i"
            git pull origin master
            cd ..
        done
        cd $wdir
    elif [ "$1" = "list" ]; then
        cd ~/.vim/bundle
        /bin/ls -1
        cd $wdir
    else
        cd ~/.vim/bundle/ && git clone "$1" && cd "$wdir"
    fi
}
