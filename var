#----------------------------------------#
#                  PATH                  #
#----------------------------------------#

# Python 3.7
export PATH="/Library/Frameworks/Python.framework/Versions/3.7/bin:$PATH"
export PATH="/Users/nicmahd/Library/Python/3.7/bin:$PATH"

# Python modules
if [ -d "~/Project-Mango/src" ]; then
    export PYTHONPATH=$PYTHONPATH:$HOME/Project-Mango/src/
fi

# gettext
export PATH="/usr/local/opt/gettext/bin:$PATH"

# opt
export PATH="/opt/bin:$PATH"

# openCV
export PKG_CONFIG_PATH=/usr/local/Cellar/opencv/4.0.1/lib/pkgconfig

#----------------------------------------#
#                VARIABLES               #
#----------------------------------------#

export ip=52.11.172.134
export user=ubuntu
export key=botkey.pem
export instance=$user@$ip

export HOMEBREW_AUTO_UPDATE_SECS=604800

export BOT_USERNAME='RecitalBot'
export BOT_PASSWORD='spel_icup_nibba'
export CLIENT_SECRET='YI7bG1KKzCgAlO1engP9JuvU48k'
export CLIENT_ID='wDx0kCAQPPRzsA'
export USER_AGENT='/u/RecitalBot. Contact /u/beetbug for information'

export VIMRC=~/.vim/vimrc

export gversion=9

#----------------------------------------#
#            ALIASES/FUNCTIONS           #
#----------------------------------------#

alias openn="open ."
alias k="kill"
alias ll="ls -lAFGrthO"
alias ls="ls -G"
alias l="ls -1Frt"
alias pip="pip3"
alias python="python3"
alias locate="locate -i" # case insensitive
alias grep="grep --color=always"
alias notebook="nohup jupyter notebook > /dev/null 2>&1 & disown"
alias sudo="sudo "
alias taill="tail -f"
alias h2o='nohup java -jar /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/h2o/backend/bin/h2o.jar > /dev/null 2>&1 & disown'
alias hkill='pkill -f "/usr/bin/java -jar /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/h2o/backend/bin/h2o.jar"'
alias g="git"
alias gcc="gcc-$gversion"
alias g++="g++-$gversion"
alias c++="c++-$gversion"
alias sort="gsort"

f () { find . -name "*$@*" -print; } # Find all files under the current directory
ff () { find . -type f -print | grep -v node_ | grep -v .git ; }
ffpy () { find . -type f -name "*.py" -print | grep -v node_ | grep -v .git; }
fs () { find . -name "$@"'*' -print | grep -v node_ | grep -v .git; } # Find file whose name starts with a given string
fe () { find . -name '*'"$@" -print | grep -v node_ | grep -v .git; } # Find file whose name ends with a given string
fpy () { echo "find . -name '*.py' | grep -v node_ | grep -v .git | xargs grep $@ 2>/dev/null"; find . -name '*.js' | grep -v node_ | grep -v .git | xargs grep $@ 2>/dev/null; }
fall () { echo "find . | grep -v node_ | grep -v .git | grep -v TAG | xargs grep $@ 2>/dev/null"; find . | grep -v node_ | grep -v .git | grep -v TAG | xargs grep $@ 2>/dev/null; }
pf () { local home=$(ps aux | grep "$1" | grep -v grep); [[ -z $(echo $home) ]] && echo "No local results found" || echo "$home" }
jkill () { pkill -f jupyter || echo "No running notebooks" }
# cd () { local dir=$PWD; builtin cd "$@"; { [ -d "venv" ] || [ -d "env" ] } && activate; { [[ $PWD/ = $dir/* ]] && [ -d "venv" ] || [ -d "env" ] } || deactivate }
sshc () { ssh -i ~/.ssh/$key $instance; }
tunnel () { kill $(pf 'ssh.*$1' | awk '{print $2}') > /dev/null 2>&1; ssh -i ~/.ssh/$key -fgNL $1:127.0.0.1:$1 $instance }

man () { if [[ $@ == "gcc" ]]; then command man gcc-$gversion; elif
            [[ $@ == "g++" ]]; then command man g++-$gversion; elif
            [[ $@ == "c++" ]]; then command man c++-$gversion; else command man "$@"; fi
}

activate ()
{
    declare -a paths=("/bin" "/env/bin" "/venv/bin" "")
    for p in $paths; do
        [ -f ."$p"/activate ] && { source ."$p"/activate; return 0 }
    done
    echo "Not in a venv directory"
}

duck ()
{
    [ -n "$2" ] && depth="$2" ||
    if [ -d "$1" ]; then
        [ -n "$2" ] && { [[ $2 =~ '^[0-9]+$' ]] && du -ckhd $2 $1 | sort -h || echo "Depth must be a number" } || { du -ckhd 1 $1 | sort -h }
    elif [ -n "$2" ] && [ -d "$2" ]; then
        [[ $1 =~ '^[0-9]+$' ]] && { du -ckhd $1 $2 | sort -h } || { echo "Depth must be a number" }
    elif [[ $1 =~ '^[0-9]+$' ]]; then
        du -ckhd $1 | sort -h
    elif [ -n "$1" ]; then
        echo "Depth must be a number"
    else
        du -ckhd 1 | sort -h
    fi
}

vim-pkg () {
    wdir=$(pwd)
    local wdir
    if [ -z "$1" ]; then
        echo "Must pass a package url"
    elif [ "$1" = "update" ]; then
        cd ~/.vim/bundle
        for i in *; do
            cd "$i"
            git pull
            cd ..
        done
        cd $wdir
    elif [ "$1" = "list" ]; then
        cd ~/.vim/bundle
        /bin/ls -1
        cd $wdir
    else
        cd ~/.vim/bundle/ && git clone "$1" && cd "$wdir"
    fi
}
