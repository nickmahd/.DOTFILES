#----------------------------------------#
#                VARIABLES               #
#----------------------------------------#

export PATH=$PATH:~/.bin
export PATH=$PATH:~/.local/bin

source ~/.vars.local

export SSHNAME=home

export HOMEBREW_AUTO_UPDATE_SECS=86400

export ZSHRC=~/.zshrc
export VIMRC=~/.vim/vimrc
export VPKG=~/.vim/pack/bundle/start
export DOTFILES=~/.DOTFILES
export VAR=~/.vars

export EDITOR=vim

export gversion=9

[ -d "/mnt/c" ] && export C=/mnt/c
[ -d "/mnt/d" ] && export D=/mnt/d

#----------------------------------------#
#            ALIASES/FUNCTIONS           #
#----------------------------------------#

alias ip="ipconfig getifaddr en0"
alias eip="curl ifconfig.me; echo"
alias attach="tmux attach -t"
alias zload="source $ZSHRC"
alias dot="cd $DOTFILES"
colors() { for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done }

alias l="ls -1Frt"
alias ls="ls --color=always"
alias ll="ls -AFGhlprt"
alias grep="grep --color=always"

alias g="git"
alias pip="pip3"
alias python="python3"

if [[ "$OSTYPE" == "darwin"* ]]; then
    alias ls="gls --color=always"
    alias tr="gtr"
    alias sort="gsort"
    alias locate="locate -i"
fi

f () { find . -name "*$@*" -print; }
fs () { find . -name "$@"'*' -print | grep -v node_ | grep -v .git; }
fe () { find . -name '*'"$@" -print | grep -v node_ | grep -v .git; }
duck () { du -ckhd ${2:-1} ${1:-.} | sort -rh }
pf () {
    local home=$(ps aux | grep "$@" | grep -v grep)
    [[ -z $(echo $home) ]] && echo "No local results found" || echo "$home";
}

alias sshc="ssh $SSHNAME"
tunnel ()
{
    kill $(pf "ssh.*$1" | awk '{print $2}') > /dev/null 2>&1
    ssh -fgNL $1:127.0.0.1:$1 $SSHNAME
}

alias jbook="nohup jupyter notebook > /dev/null 2>&1 & disown; jupyter notebook list"
alias jlist="jupyter notebook list"
alias jkill="pkill -f jupyter || echo 'No running notebooks'"

open-repo () { REPO_URL=$(git config remote.origin.url); open "${${REPO_URL/git@github.com:/https://github.com/}%%.git}"; }

unactivate () { [ ! -z $(command -v deactivate) ] && deactivate; }
activate ()
{
    declare -a paths=("bin" "env/bin" "venv/bin" "")
    for p in $paths; do
        [ -f ./"$p"/activate ] && { source ./"$p"/activate; return 0; }
    done
}
cd ()
{
    local dir=$PWD
    builtin cd "$@"

    [[ $(pwd) == $(dirname "$VIRTUAL_ENV")/* ]] && return 0

    [[ -d ./env ]] && unactivate || activate

    return 0
}
open ()
{
    if [[ "$@" ]]; then
        command open "$@" 2> /dev/null || explorer.exe "$@" 2> /dev/null
    else
        command open . 2> /dev/null || explorer.exe . 2> /dev/null
    fi
    return 0
}

sudo ()
{
    if type $1 2>/dev/null | grep -q 'function'; then
        local arg1=$1
        shift && command sudo zsh -c "$(declare -f $arg1); $arg1 $*"
    elif type $1 2>/dev/null | grep -q 'alias'; then
        alias sudo='sudo '
        eval "sudo $@"
    else
        command sudo "$@"
    fi
}

vim-pkg () {
    if [ -z "$1" ]; then
        echo "Must pass a package url"
    elif [ "$1" = "update" ]; then
        cd ~/.vim && git submodule update --recursive --remote
        cd --
    elif [ "$1" = "list" ]; then
        /bin/ls -1 $VPKG
    else
        cd $VPKG
        git submodule add -b master "$1"
        cd --
    fi
}

